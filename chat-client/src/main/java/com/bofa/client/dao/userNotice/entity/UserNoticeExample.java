package com.bofa.client.dao.userNotice.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UserNoticeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public UserNoticeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("USERID is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("USERID is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("USERID =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("USERID <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("USERID >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("USERID >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("USERID <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("USERID <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("USERID in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("USERID not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("USERID between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("USERID not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("USERNAME is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("USERNAME is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("USERNAME =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("USERNAME <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("USERNAME >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("USERNAME >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("USERNAME <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("USERNAME <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("USERNAME like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("USERNAME not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("USERNAME in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("USERNAME not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("USERNAME between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("USERNAME not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andNoticeidIsNull() {
            addCriterion("NOTICEID is null");
            return (Criteria) this;
        }

        public Criteria andNoticeidIsNotNull() {
            addCriterion("NOTICEID is not null");
            return (Criteria) this;
        }

        public Criteria andNoticeidEqualTo(Integer value) {
            addCriterion("NOTICEID =", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidNotEqualTo(Integer value) {
            addCriterion("NOTICEID <>", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidGreaterThan(Integer value) {
            addCriterion("NOTICEID >", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("NOTICEID >=", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidLessThan(Integer value) {
            addCriterion("NOTICEID <", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidLessThanOrEqualTo(Integer value) {
            addCriterion("NOTICEID <=", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidIn(List<Integer> values) {
            addCriterion("NOTICEID in", values, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidNotIn(List<Integer> values) {
            addCriterion("NOTICEID not in", values, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidBetween(Integer value1, Integer value2) {
            addCriterion("NOTICEID between", value1, value2, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidNotBetween(Integer value1, Integer value2) {
            addCriterion("NOTICEID not between", value1, value2, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticenameIsNull() {
            addCriterion("NOTICENAME is null");
            return (Criteria) this;
        }

        public Criteria andNoticenameIsNotNull() {
            addCriterion("NOTICENAME is not null");
            return (Criteria) this;
        }

        public Criteria andNoticenameEqualTo(String value) {
            addCriterion("NOTICENAME =", value, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameNotEqualTo(String value) {
            addCriterion("NOTICENAME <>", value, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameGreaterThan(String value) {
            addCriterion("NOTICENAME >", value, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameGreaterThanOrEqualTo(String value) {
            addCriterion("NOTICENAME >=", value, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameLessThan(String value) {
            addCriterion("NOTICENAME <", value, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameLessThanOrEqualTo(String value) {
            addCriterion("NOTICENAME <=", value, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameLike(String value) {
            addCriterion("NOTICENAME like", value, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameNotLike(String value) {
            addCriterion("NOTICENAME not like", value, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameIn(List<String> values) {
            addCriterion("NOTICENAME in", values, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameNotIn(List<String> values) {
            addCriterion("NOTICENAME not in", values, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameBetween(String value1, String value2) {
            addCriterion("NOTICENAME between", value1, value2, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticenameNotBetween(String value1, String value2) {
            addCriterion("NOTICENAME not between", value1, value2, "noticename");
            return (Criteria) this;
        }

        public Criteria andNoticestatusIsNull() {
            addCriterion("NOTICESTATUS is null");
            return (Criteria) this;
        }

        public Criteria andNoticestatusIsNotNull() {
            addCriterion("NOTICESTATUS is not null");
            return (Criteria) this;
        }

        public Criteria andNoticestatusEqualTo(Integer value) {
            addCriterion("NOTICESTATUS =", value, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticestatusNotEqualTo(Integer value) {
            addCriterion("NOTICESTATUS <>", value, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticestatusGreaterThan(Integer value) {
            addCriterion("NOTICESTATUS >", value, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticestatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("NOTICESTATUS >=", value, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticestatusLessThan(Integer value) {
            addCriterion("NOTICESTATUS <", value, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticestatusLessThanOrEqualTo(Integer value) {
            addCriterion("NOTICESTATUS <=", value, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticestatusIn(List<Integer> values) {
            addCriterion("NOTICESTATUS in", values, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticestatusNotIn(List<Integer> values) {
            addCriterion("NOTICESTATUS not in", values, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticestatusBetween(Integer value1, Integer value2) {
            addCriterion("NOTICESTATUS between", value1, value2, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticestatusNotBetween(Integer value1, Integer value2) {
            addCriterion("NOTICESTATUS not between", value1, value2, "noticestatus");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeIsNull() {
            addCriterion("NOTICEDATETIME is null");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeIsNotNull() {
            addCriterion("NOTICEDATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeEqualTo(Date value) {
            addCriterionForJDBCDate("NOTICEDATETIME =", value, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("NOTICEDATETIME <>", value, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeGreaterThan(Date value) {
            addCriterionForJDBCDate("NOTICEDATETIME >", value, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("NOTICEDATETIME >=", value, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeLessThan(Date value) {
            addCriterionForJDBCDate("NOTICEDATETIME <", value, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("NOTICEDATETIME <=", value, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeIn(List<Date> values) {
            addCriterionForJDBCDate("NOTICEDATETIME in", values, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("NOTICEDATETIME not in", values, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("NOTICEDATETIME between", value1, value2, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticedatetimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("NOTICEDATETIME not between", value1, value2, "noticedatetime");
            return (Criteria) this;
        }

        public Criteria andNoticetypeIsNull() {
            addCriterion("NOTICETYPE is null");
            return (Criteria) this;
        }

        public Criteria andNoticetypeIsNotNull() {
            addCriterion("NOTICETYPE is not null");
            return (Criteria) this;
        }

        public Criteria andNoticetypeEqualTo(Integer value) {
            addCriterion("NOTICETYPE =", value, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticetypeNotEqualTo(Integer value) {
            addCriterion("NOTICETYPE <>", value, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticetypeGreaterThan(Integer value) {
            addCriterion("NOTICETYPE >", value, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticetypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("NOTICETYPE >=", value, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticetypeLessThan(Integer value) {
            addCriterion("NOTICETYPE <", value, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticetypeLessThanOrEqualTo(Integer value) {
            addCriterion("NOTICETYPE <=", value, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticetypeIn(List<Integer> values) {
            addCriterion("NOTICETYPE in", values, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticetypeNotIn(List<Integer> values) {
            addCriterion("NOTICETYPE not in", values, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticetypeBetween(Integer value1, Integer value2) {
            addCriterion("NOTICETYPE between", value1, value2, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticetypeNotBetween(Integer value1, Integer value2) {
            addCriterion("NOTICETYPE not between", value1, value2, "noticetype");
            return (Criteria) this;
        }

        public Criteria andNoticecontentIsNull() {
            addCriterion("NOTICECONTENT is null");
            return (Criteria) this;
        }

        public Criteria andNoticecontentIsNotNull() {
            addCriterion("NOTICECONTENT is not null");
            return (Criteria) this;
        }

        public Criteria andNoticecontentEqualTo(String value) {
            addCriterion("NOTICECONTENT =", value, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentNotEqualTo(String value) {
            addCriterion("NOTICECONTENT <>", value, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentGreaterThan(String value) {
            addCriterion("NOTICECONTENT >", value, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentGreaterThanOrEqualTo(String value) {
            addCriterion("NOTICECONTENT >=", value, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentLessThan(String value) {
            addCriterion("NOTICECONTENT <", value, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentLessThanOrEqualTo(String value) {
            addCriterion("NOTICECONTENT <=", value, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentLike(String value) {
            addCriterion("NOTICECONTENT like", value, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentNotLike(String value) {
            addCriterion("NOTICECONTENT not like", value, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentIn(List<String> values) {
            addCriterion("NOTICECONTENT in", values, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentNotIn(List<String> values) {
            addCriterion("NOTICECONTENT not in", values, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentBetween(String value1, String value2) {
            addCriterion("NOTICECONTENT between", value1, value2, "noticecontent");
            return (Criteria) this;
        }

        public Criteria andNoticecontentNotBetween(String value1, String value2) {
            addCriterion("NOTICECONTENT not between", value1, value2, "noticecontent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USER_NOTICE
     *
     * @mbg.generated do_not_delete_during_merge 2019-04-19 23:05:56
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table USER_NOTICE
     *
     * @mbg.generated 2019-04-19 23:05:56
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}